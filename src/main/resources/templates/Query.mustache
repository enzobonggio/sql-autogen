/** This class is generated by code don't modify it*/
{{packageName}};

import lombok.Data;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

{{#extraImports}}
import {{packageName}}
{{/extraImports}}

@Repository
public class {{className}} {
    private final JdbcTemplate jdbcTemplate;

    public {{className}}(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }
{{#valueObjects}}

    @Data
        public static class {{valueObjectName}} {
            {{#params}}
            {{paramType}} {{paramName}};
            {{/params}}
        }

{{/valueObjects}}
{{#methods}}

    {{#singleValue}} {{!this will work when you have just one item to return}}
        public {{valueObject}} {{methodName}}({{params}}) {
        return new {{valueObject}};
    }
    {{/singleValue}}
    {{^singleValue}} {{!this will work when you have paged items to return}}
    public {{valueObject}} {{methodName}}({{& params}}) {
        List<{{valueObject}}> list = new ArrayList<>;
        list.add(new {{valueObject}})
        return new Page<>(1, 1, 1, list);
    }
    {{/singleValue}}

{{/methods}}
}